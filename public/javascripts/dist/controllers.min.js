angular.module("appModule").controller("mainCtrl",
    ['$scope', '$timeout', 'flash', '$http', '$cookies', 'translateService', 'genericConfig', '$location', 'Flash',
    function($scope, $timeout, flash, $http, $cookies, translateService, genericConfig, $location, Flash){
    $scope.flash = flash;
    //Message success
    $scope.showMessageSuccess = function(messages){
        if (Object.prototype.toString.call(messages) != '[object Array]') {
            messages = new Array(messages);
        }
        var listHtml = "<ul>";
        messages.forEach(function(msg){
            listHtml += "<li>" + msg + "</li>";
        });
        listHtml += "</ul>";
        Flash.create('success',
            '<strong> '+translateService.translate('generic.Done')+'! </strong>' +
            listHtml, genericConfig.timeSuccess);
    };

    //Message error
    $scope.showMessageError = function(messages){

        if (Object.prototype.toString.call(messages) != '[object Array]') {
            messages = new Array(messages);

        }
        var listHtml = "<ul>";
        messages.forEach(function(msg){

            listHtml += "<li>" + msg + "</li>";
        });
        listHtml += "</ul>";

        Flash.create('danger',
            '<strong> '+translateService.translate('generic.Oops')+'! </strong>' +
            listHtml, genericConfig.timeError);
    };

    $scope.setLanguage = function(language){
        $http({
          method: 'GET',
          url: '/language/'+language
        }).then(function successCallback(response) {
            $scope.language = language;
            location.reload();
        });
    };

    if(flash.getMessages()){
        if(flash.isInfo){
            $scope.showMessageSuccess(flash.getMessages());
        }else{
            $scope.showMessageError(flash.getMessages());
        }
    }

    $scope.confirmPopup = function(message, callback){
        bootbox.confirm({
            size: 'small',
            title: translateService.translate('generic.Attention')+"!",
            message: message,
            buttons: {
                confirm: {
                  label: translateService.translate('generic.Confirm')
                },
                cancel: {
                  label: translateService.translate('generic.Cancel')
                }
            },
            callback: callback
        })
    };

    $scope.trackerPage = function(){
        var array = [];
        var numTracker = 5;
        var firstPage = $scope.currentPage - ((numTracker - 1) / 2);
        var lastPage = $scope.currentPage + ((numTracker - 1) / 2);

        if($scope.currentPage - 1 > ((numTracker - 1) / 2)){
            array.push('...');
        }

        if(firstPage <= 0){
            lastPage = lastPage + 1 - firstPage;
            firstPage = 1;
        }

        if(lastPage > $scope.pageCount){
            firstPage -= lastPage - $scope.pageCount;
            lastPage =  $scope.pageCount;
            if(firstPage <= 0){
                firstPage = 1;
            }
        }

        var page = firstPage;

        while(page <= lastPage){
            array.push(parseInt(page, 10));
            page++;
        }

        if(($scope.currentPage + (numTracker / 2)) <= $scope.pageCount){
            array.push('...');
        }
        return array;
    };

    $scope.setCurrencyPage = function(page){
        $location.search('page', page);
    };

    $scope.language = $cookies.get("myFavoriteLanguage");
}]);
angular.module("appModule").controller("occupationAddCtrl",
    ['$scope', 'OccupationFactory', '$controller', '$location', 'flash', 'translateService',
    function($scope, OccupationFactory, $controller, $location, flash, translateService){
    angular.extend(this, $controller('mainCtrl', {$scope: $scope}));
    $scope.saveOccupation = function(occupation){
        OccupationFactory.save(occupation, function(){
                flash.setMessagesSuccess(translateService.translate('generic.saved'));
                $location.path("/occupations");
            },
            function(response) {
                $scope.showMessageError(response.data);
            }
        );
    };

    $scope.labelOperation = translateService.translate('generic.New',[translateService.translate('occupations.Occupation')])
}]);
angular.module("appModule").controller("occupationDetailCtrl",
    ['$scope', 'occupation',function($scope, occupation){
    $scope.occupation =  occupation;
}]);
angular.module("appModule").controller("occupationEditCtrl",
    ['$scope', 'OccupationFactory', '$location', 'occupation', '$controller', 'flash', '$cookies', 'translateService',
    function($scope, OccupationFactory, $location, occupation, $controller, flash, $cookies, translateService){
    angular.extend(this, $controller('mainCtrl', {$scope: $scope, flash: flash}));
    $scope.occupation = occupation;
    $scope.saveOccupation = function(occupation){
        OccupationFactory.update(occupation, function(){
                flash.setMessagesSuccess(translateService.translate('generic.saved'));
                $location.path("/occupations");
            },
            function(response) {
                $scope.showMessageError(response.data);
            }
        );
    };
    $scope.labelOperation = translateService.translate('generic.Edit',[translateService.translate('occupations.Occupation')])
}]);
angular.module("appModule").controller("occupationListCtrl",
    ['$scope', 'OccupationFactory', '$controller', 'translateService', '$routeParams',
    function($scope, OccupationFactory, $controller, translateService, $routeParams){
    angular.extend(this, $controller('mainCtrl', {$scope: $scope}));

    $scope.listOccupation = function(page){
        OccupationFactory.query(
            {page: page},
            function(data) {
                $scope.listPaginated = data.list;
                $scope.hasNextPage = data.hasNextPage;
                $scope.pageCount = data.pageCount;
                $scope.currentPage = data.currentPage;
            },
            function(response) {
                $scope.showMessageError(response.data);
            }
        );
    };

    //Remove Occupation
    $scope.removeOccupation = function(occupation){
        $scope.confirmPopup(translateService.translate('generic.deleteConfirmation', [occupation.name]),
            function(confirmed) {
                if(confirmed){
                OccupationFactory.remove({id: occupation.id}, function(){
                    $scope.listOccupation($routeParams.page);
                    $scope.showMessageSuccess(translateService.translate('generic.deleted'));
                },function(response){
                    $scope.showMessageError(response.data);
                });}
            }
        );
    }

    $scope.listOccupation($routeParams.page);
}]);
angular.module("appModule").controller("projectAddCtrl",
    ['$scope', 'ProjectFactory', '$controller', '$location', 'flash', 'translateService', 'participants',
    function($scope, ProjectFactory, $controller, $location, flash, translateService, participants){
    angular.extend(this, $controller('mainCtrl', {$scope: $scope}));
    $scope.participants = participants;
    $scope.saveProject = function(project){
        ProjectFactory.save(project, function(){
                flash.setMessagesSuccess(translateService.translate('generic.saved'));
                $location.path("/projects");
            },
            function(response) {
                $scope.showMessageError(response.data);
            }
        );
    };

    $scope.labelOperation = translateService.translate('generic.New',[translateService.translate('projects.Project')]);
}]);
angular.module("appModule").controller("projectDetailCtrl",
    ['$scope', 'project',function($scope, project){
    $scope.project =  project;
}]);
angular.module("appModule").controller("projectEditCtrl",
    ['$scope', 'ProjectFactory', '$location', 'participants', '$controller', 'flash', '$cookies', 'translateService', 'project',
    function($scope, ProjectFactory, $location, participants, $controller, flash, $cookies, translateService, project){
    angular.extend(this, $controller('mainCtrl', {$scope: $scope, flash: flash}));
    $scope.project = project;
    $scope.participants = participants;
    $scope.saveProject = function(project){
        ProjectFactory.update(project, function(){
                flash.setMessagesSuccess(translateService.translate('generic.saved'));
                $location.path("/projects");
            },
            function(response) {
                $scope.showMessageError(response.data);
            }
        );
    };
    $scope.labelOperation = translateService.translate('generic.Edit',[translateService.translate('projects.Project')])
}]);
angular.module("appModule").controller("projectListCtrl",
    ['$scope', 'ProjectFactory', '$controller', 'translateService', '$routeParams',
    function($scope, ProjectFactory, $controller, translateService, $routeParams){
    angular.extend(this, $controller('mainCtrl', {$scope: $scope}));

    $scope.listProject = function(page){
        ProjectFactory.query(
            {page: page},
            function(data) {
                $scope.listPaginated = data.list;
                $scope.hasNextPage = data.hasNextPage;
                $scope.pageCount = data.pageCount;
                $scope.currentPage = data.currentPage;
            },
            function(response) {
                $scope.showMessageError(response.data);
            }
        );
    };

    //Remove Project
    $scope.removeProject = function(project){
        $scope.confirmPopup(translateService.translate('generic.deleteConfirmation', [project.name]),
            function(confirmed) {
                if(confirmed){
                ProjectFactory.remove({id: project.id}, function(){
                    $scope.listProject($routeParams.page);
                    $scope.showMessageSuccess(translateService.translate('generic.deleted'));
                },function(response){
                    $scope.showMessageError(response.data);
                });}
            }
        );
    }

    $scope.listProject($routeParams.page);
}]);
angular.module("appModule").controller("userAddCtrl",
    ['$scope', 'UserFactory', '$controller', '$location', 'flash', 'translateService', 'occupations',
    function($scope, UserFactory, $controller, $location, flash, translateService, occupations){
    angular.extend(this, $controller('mainCtrl', {$scope: $scope}));
    $scope.occupations = occupations;
    $scope.saveUser = function(user){
        UserFactory.save(user, function(){
                flash.setMessagesSuccess(translateService.translate('generic.saved'));
                $location.path("/users");
            },
            function(response) {
                $scope.showMessageError(response.data);
            }
        );
    };

    $scope.labelOperation = translateService.translate('generic.New',[translateService.translate('users.User')])
}]);
angular.module("appModule").controller("userDetailCtrl",
    ['$scope', 'user',function($scope, user){
    $scope.user =  user;
}]);
angular.module("appModule").controller("userEditCtrl",
    ['$scope', 'UserFactory', '$location', 'user', 'occupations', '$controller', 'flash', '$cookies', 'translateService',
    function($scope, UserFactory, $location, user, occupations, $controller, flash, $cookies, translateService){
    angular.extend(this, $controller('mainCtrl', {$scope: $scope, flash: flash}));
    $scope.user = user;
    $scope.occupations = occupations;
    $scope.saveUser = function(user){
        UserFactory.update(user, function(){
                flash.setMessagesSuccess(translateService.translate('generic.saved'));
                $location.path("/users");
            },
            function(response) {
                $scope.showMessageError(response.data);
            }
        );
    };
    $scope.labelOperation = translateService.translate('generic.Edit',[translateService.translate('users.User')])
}]);
angular.module("appModule").controller("userListCtrl",
    ['$scope', 'UserFactory', '$controller', 'translateService', '$routeParams',
    function($scope, UserFactory, $controller, translateService, $routeParams){
    angular.extend(this, $controller('mainCtrl', {$scope: $scope}));

    $scope.listUser = function(page){
        UserFactory.query(
            {page: page},
            function(data) {
                $scope.listPaginated = data.list;
                $scope.hasNextPage = data.hasNextPage;
                $scope.pageCount = data.pageCount;
                $scope.currentPage = data.currentPage;
            },
            function(response) {
                $scope.showMessageError(response.data);
            }
        );
    };

    //Remove User
    $scope.removeUser = function(user){
        $scope.confirmPopup(translateService.translate('generic.deleteConfirmation', [user.name]),
            function(confirmed) {
                if(confirmed){
                UserFactory.remove({id: user.id}, function(){
                    $scope.listUser($routeParams.page);
                    $scope.showMessageSuccess(translateService.translate('generic.deleted'));
                },function(response){
                    $scope.showMessageError(response.data);
                });}
            }
        );
    }

    $scope.listUser($routeParams.page);
}]);